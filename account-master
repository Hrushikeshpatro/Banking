--creation of table
CREATE TABLE ACCT_MASTER(ACCNO NUMBER CONSTRAINT ACC_PK PRIMARY KEY,
NAME VARCHAR2(30) CONSTRAINT NAME_NN NOT NULL,
BAL NUMBER CONSTRAINT BAL_CHECK CHECK(BAL>2000),
GENDER CHAR CONSTRAINT GEN_CHECK CHECK(GENDER IN
('M','F')),
P_ADDR VARCHAR2(50),
C_ADDR VARCHAR2(50),
PHONE NUMBER CONSTRAINT PHONE_CHECK
CHECK(LENGTH(PHONE)=10),
STATUS NUMBER(1) CONSTRAINT ST_CHECK
CHECK(STATUS IN (1,0))
);
CREATE TABLE ACCT_TRANS(TRID NUMBER CONSTRAINT TRID_PK PRIMARY KEY,
TTYPE CHAR CONSTRAINT TTYPE_CHECK CHECK(TTYPE IN
('W','D')),
TDATE DATE,
TAMT NUMBER,
ACCNO NUMBER CONSTRAINT ACC_FK REFERENCES
ACCT_MASTER(ACCNO),
STATUS NUMBER(1) CONSTRAINT ST_CHECK CHECK(STATUS
IN (1,0))
);
--this sequence is for genarate a unique account number
CREATE SEQUENCE S1
START WITH 1000
MINVALUE 1000

/
--MAKING PACAGE
create or replace PACKAGE BANK_DEATELS--HEAD
AS
--PACAGE 1 IS FOR INSERTINT NEWLY OPEN ACCOUNT DEATELS
PROCEDURE ACCOUNT_OPEN (P_NAME VARCHAR2,
P_BAL NUMBER,
P_GENDER CHAR,
P_P_ADDR VARCHAR2,
P_C_ADDR VARCHAR2,
P_PHONE NUMBER
);
--PROCEDURE 2 IS FOR UPDATING STATUS WHEN ACCOUNT HOLDER CLOSE THEIR ACCOUNT

PROCEDURE ACCOUNT_CLOSE(CLOSE_ACCOUNTNUMBER NUMBER);
--PACKAGE 3 IS FOR INSERTING DATA INTO ACCOUNT TRANCE TABLE
PROCEDURE ACCT_CRADIT_DEBIT(P_TTYPE CHAR,
P_TAMT NUMBER,
P_ACCNO NUMBER
);
--function 2 is for show current balance
FUNCTION CURRENT_BALANCE (P_ACCOUT_NUMBER NUMBER)
RETURN NUMBER;
--FUNCTION 3 IS FOR MINISTATEMENT
FUNCTION MINI_STATEMENT(P_ACCNO NUMBER,
P_REF OUT SYS_REFCURSOR)
RETURN SYS_REFCURSOR;
END BANK_DEATELS;
/
create or replace PACKAGE BODY BANK_DEATELS--PACKAGE BODY
AS
--CREATE PRIVATE FUNCTION FOR INSERTING TRID
FUNCTION F2 RETURN NUMBER
AS
V NUMBER;
BEGIN
SELECT COUNT(*) INTO V FROM ACCT_TRANS;
RETURN V;
END F2;
--function 2 is for show current balance
FUNCTION CURRENT_BALANCE (P_ACCOUT_NUMBER NUMBER)
RETURN NUMBER
AS
V NUMBER;
BEGIN
SELECT BAL INTO V FROM acct_master WHERE ACCNO=P_ACCOUT_NUMBER;
RETURN V;
END;
--FUNCTION 3 IS FOR MINISTATEMENT
FUNCTION MINI_STATEMENT(P_ACCNO NUMBER,
P_REF OUT SYS_REFCURSOR)
RETURN SYS_REFCURSOR
AS
TYPE REC IS RECORD(ACCNO NUMBER,
NAME VARCHAR2(40),
TDATE DATE,
TTYPE CHAR,
TAMT NUMBER,
FINAL_AMT NUMBER);
R REC;
BEGIN
OPEN P_REF FOR SELECT ACCNO,NAME,TDATE,TTYPE,TAMT,SUM(CML)OVER(ORDER
BY TDATE)AS FINAL_AMT FROM
(SELECT A1.ACCNO AS ACCNO,NAME,TDATE,TTYPE,TAMT,
CASE WHEN TTYPE='W' THEN TAMT * -1
ELSE TAMT END AS CML
FROM ACCT_MASTER A1 JOIN ACCT_TRANS A2 ON A1.ACCNO=A2.ACCNO) WHERE
ACCNO=P_ACCNO;
LOOP
FETCH P_REF INTO R ;
EXIT WHEN P_REF%NOTFOUND;
DBMS_OUTPUT.PUT_LINE(R.ACCNO||' - '||R.NAME||' - '||R.TDATE||' - '||
R.TTYPE||' - '||R.TAMT||' - '||R.FINAL_AMT);
END LOOP;
RETURN P_REF;
END;
--PROCEDURE 1 IS FOR INSERTINT NEWLY OPEN ACCOUNT DEATELS
PROCEDURE ACCOUNT_OPEN (P_NAME VARCHAR2,
P_BAL NUMBER,
P_GENDER CHAR,
P_P_ADDR VARCHAR2,
P_C_ADDR VARCHAR2,
P_PHONE NUMBER
)
AS
BEGIN
INSERT INTO ACCT_MASTER VALUES(S1.NEXTVAL,
P_NAME ,
P_BAL ,
P_GENDER ,
P_P_ADDR ,
P_C_ADDR ,
P_PHONE,
1);
END;
--PROCEDURE 2 IS FOR UPDATING STATUS WHEN ACCOUNT HOLDER CLOSE THEIR ACCOUNT

PROCEDURE ACCOUNT_CLOSE(CLOSE_ACCOUNTNUMBER NUMBER)
AS
BEGIN
UPDATE ACCT_MASTER SET STATUS=0 WHERE ACCNO=CLOSE_ACCOUNTNUMBER;
UPDATE ACCT_TRANS SET STATUS=0 WHERE ACCNO=CLOSE_ACCOUNTNUMBER;
END;
--PROSUDER 3 IS FOR INSERTING TTYPE,TAMT,ACCNO INTO TRANSE TABLE
PROCEDURE ACCT_CRADIT_DEBIT(P_TTYPE CHAR,
P_TAMT NUMBER,
P_ACCNO NUMBER
)
AS
V NUMBER;
BEGIN
V:=F2;
INSERT INTO ACCT_TRANS VALUES(V+1,
P_TTYPE,
SYSTIMESTAMP,
P_TAMT,
P_ACCNO,
1);
IF P_TTYPE= 'W' THEN
UPDATE ACCT_MASTER SET BAL=BAL-P_TAMT WHERE ACCNO=P_ACCNO;
ELSIF P_TTYPE= 'D' THEN
UPDATE ACCT_MASTER SET BAL=BAL+P_TAMT WHERE ACCNO=P_ACCNO;
END IF;
END;
END BANK_DEATELS;